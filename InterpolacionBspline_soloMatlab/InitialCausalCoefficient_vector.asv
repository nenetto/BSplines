function image_out = InitialCausalCoefficient_vector(image,z)

Size_data = size(image);

% This initilization corresponds to mirror boundaries
TruncatedSum = 0;
if(eps > 0)
    Horizon = ceil(log(eps)/log(abs(z)));
    TruncatedSum = Horizon < Size_data(1);
end

if(TruncatedSum)
    % Accelerated loop
    if(Horizon>0)
        zn = repmat(z.^(0:Horizon)',[1 Size_data(2) Size_data(3) Size_data(4)]);
        Sum = image(1:(Horizon+1),:,:,:);
        Sum = zn.*Sum;
        Sum = sum(Sum,1);
        image(1,:,:,:) = Sum;
    end
    image_out = image;
else
    % Full loop NOT FIXED
    
    zn = repmat(z.^(0:(Size_data(1)-1))',[1 Size_data(2) Size_data(3) Size_data(4)]);
    Sum = image(1,:,:,:)+z^()*
    Sum = image(1:end,:,:,:);
    
    z2n = z(2*Size_data(1)-3)*(1./zn);
    

    
    Sum = samples(1) + z^(DataLength-1) * samples(DataLength);
    z2n = z^(DataLength-1) * z^(DataLength-1) * 1.0/z;
    
    
    
    for n=1:(DataLength-1)
        Sum = Sum + (zn + z2n) * samples(n);
        zn = zn * z;
        z2n = z2n * iz;
    end
    c = ( Sum / (1-zn*zn));
end




end